{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Lopes\\\\Desktop\\\\NovaFuture4\\\\Vitor-Lopes\\\\semana8\\\\astro-match\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lopes\\\\Desktop\\\\NovaFuture4\\\\Vitor-Lopes\\\\semana8\\\\astro-match\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lopes\\\\Desktop\\\\NovaFuture4\\\\Vitor-Lopes\\\\semana8\\\\astro-match\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lopes\\\\Desktop\\\\NovaFuture4\\\\Vitor-Lopes\\\\semana8\\\\astro-match\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Lopes\\\\Desktop\\\\NovaFuture4\\\\Vitor-Lopes\\\\semana8\\\\astro-match\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lopes\\\\Desktop\\\\NovaFuture4\\\\Vitor-Lopes\\\\semana8\\\\astro-match\\\\src\\\\containers\\\\MatchScreen\\\\index.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AppBar } from '../../components/AppBar';\nimport { mdiAccountSwitch } from '@mdi/js';\nimport { updateCurrentPage } from '../../actions/route';\nimport { Avatar, List, ListItem, ListText, MatchIcon } from './styled';\nimport { getMatches as _getMatches } from '../../actions/profiles';\n\nvar MatchScreen =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MatchScreen, _Component);\n\n  function MatchScreen() {\n    _classCallCheck(this, MatchScreen);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MatchScreen).apply(this, arguments));\n  }\n\n  _createClass(MatchScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.getMatches) {\n        this.props.getMatches();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          goToSwipeScreen = _this$props.goToSwipeScreen,\n          matches = _this$props.matches;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        leftAction: React.createElement(MatchIcon, {\n          path: mdiAccountSwitch,\n          size: 1,\n          onClick: goToSwipeScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, matches && matches.map(function (match) {\n        return React.createElement(ListItem, {\n          key: match.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          src: match.photo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }), React.createElement(ListText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, match.name));\n      })));\n    }\n  }]);\n\n  return MatchScreen;\n}(Component);\n\nMatchScreen.propTypes = {\n  goToSwipeScreen: PropTypes.func.isRequired,\n  getMatches: PropTypes.func.isRequired,\n  matches: PropTypes.array\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    matches: state.profiles.matches\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    goToSwipeScreen: function goToSwipeScreen() {\n      return dispatch(updateCurrentPage('SwipeScreen'));\n    },\n    getMatches: function getMatches() {\n      return dispatch(_getMatches());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchScreen);","map":{"version":3,"sources":["C:/Users/Lopes/Desktop/NovaFuture4/Vitor-Lopes/semana8/astro-match/src/containers/MatchScreen/index.js"],"names":["PropTypes","React","Component","connect","AppBar","mdiAccountSwitch","updateCurrentPage","Avatar","List","ListItem","ListText","MatchIcon","getMatches","MatchScreen","props","goToSwipeScreen","matches","map","match","name","photo","propTypes","func","isRequired","array","mapStateToProps","state","profiles","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,gBAAT,QAAiC,SAAjC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,QAAjC,EAA2CC,SAA3C,QAA4D,UAA5D;AACA,SAASC,UAAU,IAAVA,WAAT,QAA2B,wBAA3B;;IAEMC,W;;;;;;;;;;;;;wCACgB;AAClB,UAAI,KAAKC,KAAL,CAAWF,UAAf,EAA2B;AACzB,aAAKE,KAAL,CAAWF,UAAX;AACD;AACF;;;6BAEQ;AAAA,wBAC8B,KAAKE,KADnC;AAAA,UACCC,eADD,eACCA,eADD;AAAA,UACkBC,OADlB,eACkBA,OADlB;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,UAAU,EAAE,oBAAC,SAAD;AACV,UAAA,IAAI,EAAEX,gBADI;AAEV,UAAA,IAAI,EAAE,CAFI;AAGV,UAAA,OAAO,EAAEU,eAHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,OAAO,IAAIA,OAAO,CAACC,GAAR,CAAY,UAACC,KAAD;AAAA,eACtB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,KAAK,CAACC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAED,KAAK,CAACE,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAWF,KAAK,CAACC,IAAjB,CAFF,CADsB;AAAA,OAAZ,CADd,CARF,CADF;AAmBD;;;;EA5BuBjB,S;;AA+B1BW,WAAW,CAACQ,SAAZ,GAAwB;AACtBN,EAAAA,eAAe,EAAEf,SAAS,CAACsB,IAAV,CAAeC,UADV;AAEtBX,EAAAA,UAAU,EAAEZ,SAAS,CAACsB,IAAV,CAAeC,UAFL;AAGtBP,EAAAA,OAAO,EAAEhB,SAAS,CAACwB;AAHG,CAAxB;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCV,IAAAA,OAAO,EAAEU,KAAK,CAACC,QAAN,CAAeX;AADQ,GAAL;AAAA,CAA7B;;AAIA,IAAMY,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCd,IAAAA,eAAe,EAAE;AAAA,aAAMc,QAAQ,CAACvB,iBAAiB,CAAC,aAAD,CAAlB,CAAd;AAAA,KADqB;AAEtCM,IAAAA,UAAU,EAAE;AAAA,aAAMiB,QAAQ,CAACjB,WAAU,EAAX,CAAd;AAAA;AAF0B,GAAL;AAAA,CAAnC;;AAKA,eAAeT,OAAO,CAACsB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,WAA7C,CAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { AppBar } from '../../components/AppBar'\nimport { mdiAccountSwitch } from '@mdi/js'\nimport { updateCurrentPage } from '../../actions/route'\nimport { Avatar, List, ListItem, ListText, MatchIcon } from './styled'\nimport { getMatches } from '../../actions/profiles'\n\nclass MatchScreen extends Component {\n  componentDidMount() {\n    if (this.props.getMatches) {\n      this.props.getMatches()\n    }\n  }\n\n  render() {\n    const { goToSwipeScreen, matches } = this.props\n    return (\n      <div>\n        <AppBar\n          leftAction={<MatchIcon\n            path={mdiAccountSwitch}\n            size={1}\n            onClick={goToSwipeScreen}\n          />}\n        />\n        <List>\n          {matches && matches.map((match) => (\n            <ListItem key={match.name}>\n              <Avatar src={match.photo} />\n              <ListText>{match.name}</ListText>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    )\n  }\n}\n\nMatchScreen.propTypes = {\n  goToSwipeScreen: PropTypes.func.isRequired,\n  getMatches: PropTypes.func.isRequired,\n  matches: PropTypes.array\n}\n\nconst mapStateToProps = state => ({\n  matches: state.profiles.matches\n})\n\nconst mapDispatchToProps = dispatch => ({\n  goToSwipeScreen: () => dispatch(updateCurrentPage('SwipeScreen')),\n  getMatches: () => dispatch(getMatches())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchScreen)"]},"metadata":{},"sourceType":"module"}