{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Lopes\\\\Desktop\\\\NovaFuture4\\\\Vitor-Lopes\\\\semana8\\\\astro-match\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lopes\\\\Desktop\\\\NovaFuture4\\\\Vitor-Lopes\\\\semana8\\\\astro-match\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lopes\\\\Desktop\\\\NovaFuture4\\\\Vitor-Lopes\\\\semana8\\\\astro-match\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lopes\\\\Desktop\\\\NovaFuture4\\\\Vitor-Lopes\\\\semana8\\\\astro-match\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Lopes\\\\Desktop\\\\NovaFuture4\\\\Vitor-Lopes\\\\semana8\\\\astro-match\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lopes\\\\Desktop\\\\NovaFuture4\\\\Vitor-Lopes\\\\semana8\\\\astro-match\\\\src\\\\containers\\\\MatchScreen\\\\index.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AppBar } from '../../components/AppBar';\nimport { mdiAccountSwitch } from '@mdi/js';\nimport { updateCurrentPage } from '../../actions/route';\nimport { Avatar, List, ListItem, ListText, MatchIcon } from './styled';\n\nvar MatchScreen =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MatchScreen, _Component);\n\n  function MatchScreen() {\n    _classCallCheck(this, MatchScreen);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MatchScreen).apply(this, arguments));\n  }\n\n  _createClass(MatchScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.getMatches) {\n        this.props.getMatches();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          goToSwipeScreen = _this$props.goToSwipeScreen,\n          matches = _this$props.matches;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        leftAction: React.createElement(MatchIcon, {\n          path: mdiAccountSwitch,\n          size: 1,\n          onClick: goToSwipeScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, matches && matches.map(function (match) {\n        return React.createElement(ListItem, {\n          key: match.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          src: match.photo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }), React.createElement(ListText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, match.name));\n      })));\n    }\n  }]);\n\n  return MatchScreen;\n}(Component);\n\nMatchScreen.propTypes = {\n  goToSwipeScreen: PropTypes.func.isRequired,\n  getMatches: PropTypes.func.isRequired,\n  matches: PropTypes.array\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    goToSwipeScreen: function goToSwipeScreen() {\n      return dispatch(updateCurrentPage('SwipeScreen'));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchScreen);","map":{"version":3,"sources":["C:/Users/Lopes/Desktop/NovaFuture4/Vitor-Lopes/semana8/astro-match/src/containers/MatchScreen/index.js"],"names":["PropTypes","React","Component","connect","AppBar","mdiAccountSwitch","updateCurrentPage","Avatar","List","ListItem","ListText","MatchIcon","MatchScreen","props","getMatches","goToSwipeScreen","matches","map","match","name","photo","propTypes","func","isRequired","array","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,yBAArB;AACA,SAAQC,gBAAR,QAA+B,SAA/B;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,SAA1C,QAA0D,UAA1D;;IAEMC,W;;;;;;;;;;;;;wCACe;AACnB,UAAI,KAAKC,KAAL,CAAWC,UAAf,EAA2B;AAC1B,aAAKD,KAAL,CAAWC,UAAX;AACA;AACD;;;6BAEQ;AAAA,wBAC2B,KAAKD,KADhC;AAAA,UACDE,eADC,eACDA,eADC;AAAA,UACgBC,OADhB,eACgBA,OADhB;AAGR,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,MAAD;AACC,QAAA,UAAU,EAAE,oBAAC,SAAD;AACX,UAAA,IAAI,EAAEX,gBADK;AAEX,UAAA,IAAI,EAAE,CAFK;AAGX,UAAA,OAAO,EAAEU,eAHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAQC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEC,OAAO,IAAIA,OAAO,CAACC,GAAR,CAAY,UAACC,KAAD;AAAA,eACvB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,KAAK,CAACC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAED,KAAK,CAACE,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,EAEC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAWF,KAAK,CAACC,IAAjB,CAFD,CADuB;AAAA,OAAZ,CADb,CARD,CADD;AAmBA;;;;EA7BwBjB,S;;AAgC1BU,WAAW,CAACS,SAAZ,GAAwB;AACvBN,EAAAA,eAAe,EAAEf,SAAS,CAACsB,IAAV,CAAeC,UADT;AAEvBT,EAAAA,UAAU,EAAEd,SAAS,CAACsB,IAAV,CAAeC,UAFJ;AAGvBP,EAAAA,OAAO,EAAEhB,SAAS,CAACwB;AAHI,CAAxB;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK,EAAL;AAAA,CAA7B;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACvCb,IAAAA,eAAe,EAAE;AAAA,aAAMa,QAAQ,CAACtB,iBAAiB,CAAC,aAAD,CAAlB,CAAd;AAAA;AADsB,GAAL;AAAA,CAAnC;;AAIA,eAAeH,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,WAA7C,CAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {AppBar} from '../../components/AppBar'\nimport {mdiAccountSwitch} from '@mdi/js'\nimport {updateCurrentPage} from '../../actions/route'\nimport {Avatar, List, ListItem, ListText, MatchIcon} from './styled'\n\nclass MatchScreen extends Component {\n\tcomponentDidMount() {\n\t\tif (this.props.getMatches) {\n\t\t\tthis.props.getMatches()\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {goToSwipeScreen, matches} = this.props\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<AppBar\n\t\t\t\t\tleftAction={<MatchIcon\n\t\t\t\t\t\tpath={mdiAccountSwitch}\n\t\t\t\t\t\tsize={1}\n\t\t\t\t\t\tonClick={goToSwipeScreen}\n\t\t\t\t\t/>}\n\t\t\t\t/>\n\t\t\t\t<List>\n\t\t\t\t\t{matches && matches.map((match) => (\n\t\t\t\t\t\t<ListItem key={match.name}>\n\t\t\t\t\t\t\t<Avatar src={match.photo}/>\n\t\t\t\t\t\t\t<ListText>{match.name}</ListText>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nMatchScreen.propTypes = {\n\tgoToSwipeScreen: PropTypes.func.isRequired,\n\tgetMatches: PropTypes.func.isRequired,\n\tmatches: PropTypes.array\n}\n\nconst mapStateToProps = state => ({\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tgoToSwipeScreen: () => dispatch(updateCurrentPage('SwipeScreen')),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchScreen)\n"]},"metadata":{},"sourceType":"module"}